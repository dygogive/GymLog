package com.example.gymlog.ui.exercise.dialogs;

import android.app.AlertDialog;
import android.content.Context;
import android.util.Log;
import android.widget.Toast;

import com.example.gymlog.R;
import com.example.gymlog.sqlopenhelper.PlanManagerDAO;
import com.example.gymlog.model.exercise.Exercise;
import com.example.gymlog.model.plan.TrainingBlock;

import java.util.ArrayList;
import java.util.List;

public class DialogSelectTrainingBlocks {


    public interface OnBlocksSelectedListener {
        void onBlocksSelected();
    }


    public static void addExerciseToBlocks(Context context, Exercise exercise, OnBlocksSelectedListener listener) {
        PlanManagerDAO planManagerDAO = new PlanManagerDAO(context);

        // –û—Ç—Ä–∏–º—É—î–º–æ —Ç—Ä–µ–Ω—É–≤–∞–ª—å–Ω—ñ –±–ª–æ–∫–∏, —è–∫—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å —Ñ—ñ–ª—å—Ç—Ä–∞–º –≤–ø—Ä–∞–≤–∏
        List<TrainingBlock> allBlocks = planManagerDAO.getTrainingBlocksForExercise(exercise);

        if (allBlocks.isEmpty()) {
            Toast.makeText(context, R.string.no_training_blocks_available, Toast.LENGTH_SHORT).show();
            return;
        }

        // –ú–∞—Å–∏–≤–∏ –Ω–∞–∑–≤ –±–ª–æ–∫—ñ–≤ —ñ —á–µ–∫–±–æ–∫—Å—ñ–≤
        String[] blockNames = new String[allBlocks.size()];
        boolean[] checkedItems = new boolean[allBlocks.size()];

        for (int i = 0; i < allBlocks.size(); i++) {
            TrainingBlock block = allBlocks.get(i);

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –ø—Ä–æ–≥—Ä–∞–º—É —ñ –¥–µ–Ω—å
            String programName = planManagerDAO.getProgramNameByGymDayId(block.getGymDayId());
            String gymDayName = planManagerDAO.getGymDayNameById(block.getGymDayId());

            // –û–±—Ä—ñ–∑–∞—î–º–æ –æ–ø–∏—Å –¥–æ 30 —Å–∏–º–≤–æ–ª—ñ–≤
            String description = block.getDescription();
            if (description == null) description = "";
            if (description.length() > 40) {
                description = description.substring(0, 40) + "...";
            }

            // –§–æ—Ä–º—É—î–º–æ –∫—Ä–∞—Å–∏–≤–∏–π —Ä—è–¥–æ–∫ –¥–ª—è —á–µ–∫–±–æ–∫—Å–∞
            blockNames[i] = String.format("üìå %s\nüìã %s\nüìÖ %s ‚ûù %s\n",
                    block.getName(),   // –ù–∞–∑–≤–∞ –±–ª–æ–∫—É
                    description,       // –ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å
                    programName,       // –ù–∞–∑–≤–∞ –ø—Ä–æ–≥—Ä–∞–º–∏
                    gymDayName         // –î–µ–Ω—å —Ç—Ä–µ–Ω—É–≤–∞–ª—å–Ω–æ—ó –ø—Ä–æ–≥—Ä–∞–º–∏
            );
        }

        AlertDialog.Builder builder = new AlertDialog.Builder(context);
        builder.setTitle(R.string.add_exercise_to_blocks);

        // –î–æ–¥–∞—î–º–æ –º—É–ª—å—Ç–∏–≤–∏–±—ñ—Ä–Ω–∏–π —Å–ø–∏—Å–æ–∫ –±–ª–æ–∫—ñ–≤ –∑ –æ–ø–∏—Å–∞–º–∏
        builder.setMultiChoiceItems(blockNames, checkedItems, (dialog, which, isChecked) -> {
            checkedItems[which] = isChecked;
        });

        builder.setPositiveButton(R.string.add, (dialog, which) -> {
            List<Long> selectedBlockIds = new ArrayList<>();
            for (int i = 0; i < allBlocks.size(); i++) {
                if (checkedItems[i]) {
                    selectedBlockIds.add(allBlocks.get(i).getId());
                }
            }

            if (!selectedBlockIds.isEmpty()) {
                for (long blockId : selectedBlockIds) {
                    planManagerDAO.addExerciseToBlock(blockId, exercise.getId());
                }
                Toast.makeText(context, R.string.exercise_added_to_selected_blocks, Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(context, R.string.no_block_selected, Toast.LENGTH_SHORT).show();
            }

            if (listener != null) {
                listener.onBlocksSelected();
            }
        });

        builder.setNegativeButton("–°–∫–∞—Å—É–≤–∞—Ç–∏", null);
        builder.show();
    }






    //–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –º–µ—Ç–æ–¥
    public static void show(Context context, Exercise exercise, OnBlocksSelectedListener listener) {
        PlanManagerDAO planManagerDAO = new PlanManagerDAO(context);

        Log.d("debug1", "1");

        // ‚úÖ –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ –≤–ø—Ä–∞–≤–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–∞ —ñ –º–∞—î –∫–æ—Ä–µ–∫—Ç–Ω–∏–π ID
        if (exercise.getId() == -1) {
            Toast.makeText(context, "–ü–æ–º–∏–ª–∫–∞: –í–ø—Ä–∞–≤–∞ —â–µ –Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–∞", Toast.LENGTH_SHORT).show();
            return;
        }
        Log.d("debug1", "2");
        List<TrainingBlock> allBlocks = planManagerDAO.getTrainingBlocksForExercise(exercise);
        Log.d("debug1", "3");
        if (allBlocks.isEmpty()) {
            Log.d("debug1", "4");
            Toast.makeText(context, R.string.no_training_blocks_available, Toast.LENGTH_SHORT).show();
            return;
        }
        Log.d("debug1", "5");

        String[] blockNames = new String[allBlocks.size()];
        boolean[] checkedItems = new boolean[allBlocks.size()];



        for (int i = 0; i < allBlocks.size(); i++) {
            TrainingBlock block = allBlocks.get(i);

            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –ø—Ä–æ–≥—Ä–∞–º—É —ñ –¥–µ–Ω—å
            String programName = planManagerDAO.getProgramNameByGymDayId(block.getGymDayId());
            String gymDayName = planManagerDAO.getGymDayNameById(block.getGymDayId());

            // –û–±—Ä—ñ–∑–∞—î–º–æ –æ–ø–∏—Å –¥–æ 30 —Å–∏–º–≤–æ–ª—ñ–≤
            String description = block.getDescription();
            if (description == null) description = "";
            if (description.length() > 30) {
                description = description.substring(0, 30) + "...";
            }

            // –§–æ—Ä–º—É—î–º–æ –∫—Ä–∞—Å–∏–≤–∏–π —Ä—è–¥–æ–∫ –¥–ª—è —á–µ–∫–±–æ–∫—Å–∞
            blockNames[i] = String.format("üìå %s\nüìã %s\nüìÖ %s ‚ûù %s",
                    block.getName(),   // –ù–∞–∑–≤–∞ –±–ª–æ–∫—É
                    description,       // –ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å
                    programName,       // –ù–∞–∑–≤–∞ –ø—Ä–æ–≥—Ä–∞–º–∏
                    gymDayName         // –î–µ–Ω—å —Ç—Ä–µ–Ω—É–≤–∞–ª—å–Ω–æ—ó –ø—Ä–æ–≥—Ä–∞–º–∏
            );
        }
        Log.d("debug1", "5");



        AlertDialog.Builder builder = new AlertDialog.Builder(context);
        builder.setTitle(R.string.add_exercise_to_blocks);

        builder.setMultiChoiceItems(blockNames, checkedItems, (dialog, which, isChecked) -> {
            checkedItems[which] = isChecked;
        });
        Log.d("debug1", "6");
        //–ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ –î–æ–¥–∞—Ç–∏
        builder.setPositiveButton(R.string.add, (dialog, which) -> {
            List<Long> selectedBlockIds = new ArrayList<>();
            Log.d("debug1", "7");
            for (int i = 0; i < allBlocks.size(); i++) {
                if (checkedItems[i]) {
                    selectedBlockIds.add(allBlocks.get(i).getId());
                }
            }
            Log.d("debug1", "8");
            if (!selectedBlockIds.isEmpty()) {
                for (long blockId : selectedBlockIds) {
                    planManagerDAO.addExerciseToBlock(blockId, exercise.getId());
                }
                Toast.makeText(context, R.string.exercise_added_to_selected_blocks, Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(context, R.string.no_block_selected, Toast.LENGTH_SHORT).show();
            }
            Log.d("debug1", "9");
            if (listener != null) {
                listener.onBlocksSelected();
            }
        });

        Log.d("debug1", "10");
        builder.setNegativeButton(R.string.do_not_add, null);
        Log.d("debug1", "11");
        builder.show();
    }

}
